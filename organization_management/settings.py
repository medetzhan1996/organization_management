"""
Django settings for organization_management project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ha5yx&$b1p10%65xkk$ez*_(6d(nh9ohu3n3xf4fymszz706he'
LOGIN_URL = '/'
LOGIN_REDIRECT_URL = '/account/identify/role'

# SECURITY WARNING: don't run with debug turned on in production!
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django_bootstrap_breadcrumbs',
    'mptt',
    'widget_tweaks',
    'weasyprint',
    'django_ajax',
    'import_export',
    'rest_framework',
    'rest_framework.authtoken',

    'customer',
    'account',
    'actions',
    'register',
    'warehouse',
    'inspection',
    'document_circulation',
    'service_system',
    'technological_card',
    'equipment_system',
    'cashier',
    'internat_class_diseases',
    'analytics',
    'work_time',
    'modal_convert',
    'import_data'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'organization_management.urls'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(SETTINGS_PATH, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'organization_management.wsgi.application'
AUTH_USER_MODEL = 'account.User'
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
PWA_APP_NAME = 'zhiza'
PWA_APP_DESCRIPTION = "zhiza"
PWA_APP_DEBUG_MODE = True
PWA_APP_START_URL = '/'
IMPORT_EXPORT_USE_TRANSACTIONS= True

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

DATETIME_FORMAT = '%Y-%m-%d %H:%M:%S'
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
APPEND_SLASH=False

INSURANCE_API_URL = os.getenv('INSURANCE_API_URL')
INSURANCE_API_TOKEN = os.getenv('INSURANCE_API_TOKEN')

CUSTOMER_CABINET_API_URL = os.getenv('CUSTOMER_CABINET_API_URL')
CUSTOMER_CABINET_API_TOKEN = os.getenv('CUSTOMER_CABINET_API_TOKEN')
CUSTOMER_CABINET_INSURANCE = os.getenv('CUSTOMER_CABINET_INSURANCE')


try:
    from .local_settings import *
except ImportError:
    from .prod_settings import *
